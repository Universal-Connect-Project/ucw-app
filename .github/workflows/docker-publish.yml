name: 'Publish Docker image'

on:
  push:
    branches:
      - '**'
      - main

jobs:
  setup-env:
    name: 'Load ENV Vars'
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  push_to_registry:
    name: 'Push Docker image to Docker Hub'
    runs-on: ubuntu-latest
    needs: [setup-env]

    steps:
      - name: 'Check out the repo'
        uses: actions/checkout@v4

      - name: 'Set up Node'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true

      - name: 'Create Server env file'
        env:
          env_vars: ${{ needs.setup-env.outputs.env_vars }}
        run: |
          ENV_FILE_PATH=./apps/server/.env
          touch ${ENV_FILE_PATH}
          
          # Vars
          echo -e "${{ env.env_vars }}" >> ${ENV_FILE_PATH}
          cat ${ENV_FILE_PATH}

      - name: 'Create Root env file'
        env:
          env_vars: ${{ needs.setup-env.outputs.env_vars }}
        run: |
          ENV_FILE_PATH=.env
          touch ${ENV_FILE_PATH}
          
          # Vars
          echo -e "${{ env.env_vars }}" >> ${ENV_FILE_PATH}
          echo SERVER_PORT=${{ vars.PORT }} >> ${ENV_FILE_PATH}
          echo UI_PORT=${{ vars.RESOURCE_PORT }} >> ${ENV_FILE_PATH}
            
          # Secrets (can't load these from another job, due to GH security features)
          echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> ${ENV_FILE_PATH}
          echo DOCKER_TOKEN=${{ secrets.DOCKER_TOKEN }} >> ${ENV_FILE_PATH}
          cat ${ENV_FILE_PATH}

      - name: 'Get Server version'
        run: |
          echo DOCKER_IMAGE_SERVER="$(npm pkg get version --prefix ./apps/server | xargs)" >> ./.env
          cat ./.env

      - name: 'Get UI version'
        run: |
          echo DOCKER_IMAGE_UI="$(npm pkg get version --prefix ./apps/ui | xargs)" >> ./.env
          cat ./.env

      - name: 'Log in to Docker Hub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 'Build and Push Docker images'
        working-directory: ./
        run: |
          docker compose build --quiet --push
