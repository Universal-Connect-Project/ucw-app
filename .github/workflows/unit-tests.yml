
# Name of this action
name: Unit/Integration tests

# Event triggers on pull request event
# For more detail visit https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on: pull_request

# The jobs this action will run. You can write as many jobs as you want.
# For more detail on this section visit https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs
jobs:
  # ID of the job
  run-jest-tests:
    # Name of the job as it will be displayed in GitHub
    name: Jest Tests
    # Machine which this action will be run on. For a list of all the machines available/how to run on self hosted machine visit
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: ubuntu-latest

    # Steps this job must take to complete
    steps:
      - name: Checkout under $GITHUB_WORKSPACE
        uses: actions/checkout@main

      # Specify which version of Node this project is using. For more information visit.
      # https://docs.github.com/en/actions/guides/building-and-testing-nodejs#specifying-the-nodejs-version
      - name: Set up NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install all dependencies
        run: |
          npm ci

      - name: 'Create env file'
        run: |
          touch .env
          echo DEFAULTPROVIDER=${{ vars.DEFAULTPROVIDER }} >> .env
          echo DEMO=${{ vars.DEMO }} >> .env
          echo ENV=${{ vars.ENV }} >> .env
          echo HOSTURL=${{ vars.HOSTURL }} >> .env
          echo WEBHOOKHOSTURL=${{ vars.WEBHOOKHOSTURL }} >> .env
          echo LOGLEVEL=${{ vars.LOGLEVEL }} >> .env
          echo PORT=${{ vars.PORT }} >> .env
          echo RESOURCEPREFIX=${{ vars.RESOURCEPREFIX }} >> .env
          echo RESOURCEVERSION="" >> .env
          echo CRYPTOIV=${{ secrets.CRYPTOIV }} >> .env
          echo CRYPTOKEY=${{ secrets.CRYPTOKEY }} >> .env
          echo UCPAUTHCLIENTID=${{ secrets.UCP_CLIENT_ID }} >> .env
          echo UCPAUTHCLIENTSECRET=${{ secrets.UCP_CLIENT_SECRET }} >> .env
          echo UCPAUTHENCRYPTIONKEY=${{ secrets.UCP_ENCRYPTION_KEY }} >> .env
          cat .env

      - name: Run Jest Tests
        run: |
          npx jest --all --ci