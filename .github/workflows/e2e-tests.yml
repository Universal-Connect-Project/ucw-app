
name: E2E Tests

on: pull_request

jobs:
  setup-env:
    name: 'Load ENV Vars'
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [setup-env]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          check-latest: true
      - run: npm ci

      - name: 'Create env file'
        run: |
          ENV_FILE_PATH=./apps/server/.env
          touch ${ENV_FILE_PATH}
          
          # Vars
          echo -e "${{ needs.setup-env.outputs.env_vars }}" >> ${ENV_FILE_PATH}
          echo RESOURCEVERSION="" >> ${ENV_FILE_PATH}

          # Secrets (can't load these from another job, due to GH security features)
          echo CRYPTOIV=${{ secrets.CRYPTOIV }} >> ${ENV_FILE_PATH}
          echo CRYPTOKEY=${{ secrets.CRYPTOKEY }} >> ${ENV_FILE_PATH}
          echo UCPAUTHCLIENTID=${{ secrets.UCP_CLIENT_ID }} >> ${ENV_FILE_PATH}
          echo UCPAUTHCLIENTSECRET=${{ secrets.UCP_CLIENT_SECRET }} >> ${ENV_FILE_PATH}
          echo UCPAUTHENCRYPTIONKEY=${{ secrets.UCP_ENCRYPTION_KEY }} >> ${ENV_FILE_PATH}
          cat ${ENV_FILE_PATH}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_ucp_client_id: ${{ secrets.UCP_CLIENT_ID }}
          CYPRESS_ucp_client_secret: ${{ secrets.UCP_CLIENT_SECRET }}
          CYPRESS_ucp_encryption_key: ${{ secrets.UCP_ENCRYPTION_KEY }}
          CYPRESS_sophtron_api_user_id: ${{ secrets.SOPHTRON_API_USER_ID }}
          CYPRESS_sophtron_api_user_secret: ${{ secrets.SOPHTRON_API_USER_SECRET }}
          CYPRESS_mx_client_id: ${{ secrets.MX_CLIENT_ID }}
          CYPRESS_mx_api_secret: ${{ secrets.MX_API_SECRET }}
          CYPRESS_finicity_partner_id: ${{ secrets.FINICITY_PARTNER_ID }}
          CYPRESS_finicity_secret: ${{ secrets.FINICITY_SECRET }}
          CYPRESS_finicity_app_key: ${{ secrets.FINICITY_APP_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          project: apps/server
          start: npm run dev
          wait-on: "http://localhost:8080"

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./apps/server/cypress/screenshots
