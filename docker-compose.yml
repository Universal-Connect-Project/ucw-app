services:
  server:
    depends_on:
      elasticsearch:
        condition: service_healthy
      cache:
        condition: service_healthy
    container_name: ucw-app-server
    restart: on-failure
    healthcheck:
      test: wget -q -O- http://server:${SERVER_PORT}/health || exit 1
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 6
    build:
      context: .
      dockerfile: ./Dockerfile
      <<:
        x-bake:
          platforms:
            - linux/arm64
            - linux/amd64
    networks:
      - ucw
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - ./apps/server/.env
    environment:
      - ELASTIC_SEARCH_URL=http://ucw-app-elasticsearch:9200
      - REDIS_SERVER=redis://cache:6379

  cache:
    container_name: ucw-app-cache
    image: redis:7.2-alpine
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 30s
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - ucw
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

  elasticsearch:
    container_name: ucw-app-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    restart: on-failure
    networks:
      - ucw
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://ucw-app-elasticsearch:9200/
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

volumes:
  cache:
    driver: local

networks:
  ucw:
    driver: bridge
