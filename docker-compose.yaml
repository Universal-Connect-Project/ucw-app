version: '3.8'

services:

  server:
    depends_on:
      cache:
        condition: service_healthy
      ui:
        condition: service_healthy

    container_name: ucw-app-server
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://server:${PORT}/ping"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    build: .
    image: universalconnectfoundation/ucw-app:v${DOCKER_PUBLISH_VERSION_APP}
    networks:
      - ucw
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - ./.env
    environment:
      RedisServer: "redis://cache:${REDIS_PORT}"
      ResourcePrefix: "http://ui:${RESOURCE_PORT}"

  ui:
    container_name: ucw-app-ui
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://ui:${RESOURCE_PORT}"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    build: ./ui
    image: universalconnectfoundation/ucw-ui:v${DOCKER_PUBLISH_VERSION_UI}
    networks:
      - ucw
    ports:
      - "${RESOURCE_PORT}:${RESOURCE_PORT}"
    environment:
      RESOURCE_PORT: "${RESOURCE_PORT}"

  cache:
    container_name: ucw-app-cache
    image: redis:7.2-alpine
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - ucw
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

volumes:
  cache:
    driver: local

networks:
  ucw: