version: '3.8'

services:

  server:
    depends_on:
      cache:
        condition: service_healthy
      ui:
        condition: service_healthy

    container_name: ucw-app-server
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://server:${PORT}/ping"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    build: .
    image: universalconnectfoundation/ucw-app:v${DOCKERPUBLISHVERSIONAPP}
    networks:
      - ucw
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - ./.env
    environment:
      RedisServer: "redis://cache:${REDISPORT}"
      ResourcePrefix: "http://ui:${RESOURCEPORT}"

  ui:
    container_name: ucw-app-ui
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://ui:${RESOURCEPORT}"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    build: ./ui
    image: universalconnectfoundation/ucw-ui:v${DOCKERPUBLISHVERSIONUI}
    networks:
      - ucw
    ports:
      - "${RESOURCEPORT}:${RESOURCEPORT}"
    environment:
      ResourcePort: "${RESOURCEPORT}"

  cache:
    container_name: ucw-app-cache
    image: redis:7.2-alpine
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - ucw
    ports:
      - "${REDISPORT}:${REDISPORT}"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data

volumes:
  cache:
    driver: local

networks:
  ucw: